# database
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/transacao?useTimezone=true&serverTimezone=UTC}
spring.database.driverClassName=${DB_DRIVER:com.mysql.cj.jdbc.Driver}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}

# jpa
spring.jpa.database-platform=${JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}





spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

spring.kafka.topic.transactions=${TRANSACTION_TOPIC_NAME:transacoes}



# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transacao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transacao/protocol/openid-connect/certs}

